## Tables

users
- id
- email
- encrypted_password
- reset_password_token
- reset_password_sent_at
- remember_created_at
- sign_in_count
- current_sign_in_at
- last_sign_in_at
- current_sign_in_ip
- last_sign_in_ip
- created_at
- updated_at

lists
- id
- name
- description
- user_id
- created_at
- updated_at

tasks
- id
- list_id
- user_id
- name
- due_at
- completed_at
- created_at
- updated_at


## Application description

A simple task management application allowing you to: 
  - list tasks by:
    - Weekly view {today, tomorrow, specified week}
    /weekly/{today|default,tomorrow}

    - By lists {unlisted tasks, listed tasks}
    /lists/{list_name}

    - List all tasks
    /tasks/


  - create, update, delete tasks
  - create, update, delete lists


## Caching Strategies

- Introduction
  - Brief discussion of modern web applications
    - Importance of speed
    - Brief overview of 2 approaches

- HTML5 Cache Manifest
  - Size of assets allowed
  - Network traffic
  - JavaScript API
  - Offline
  - Debugging reports with Firebug + WebKit console
  - Discuss benefits and negatives of approach

- Fragment caching
  - Installation of Memcached server




- notes
  - page responsiveness
    - measure
      - firebug
        - yslow
      - Webkit console
    - improve
      - browser load time
        - combine js and CSS files
        - minify js and CSS
          - compmresses by removing linespaces and spaces
          - CDN

  - page caching
    - when every user sees the same content
    - when the data within that page is unlikely to change very often
  
  - fragment caching
    - brake the page down into small fragments
    - DB hits fragment_exists?(fragement_name)
    - "There are only two hard things in Computer Science: cache invalidation and naming things" - Phil Karlton

  - Memcached
    - key value based system
    - cache expiration
    - stack based system ( first in, first out )
    - intelligent key names "tasks/#{id}/#{updated_at.to_s(:number)}"
    - when to use
      - action and fragment caching
      - when content is different for any user ( avoid database hits )
  
  - client side caching
    - 3 headers ( max-age, etag, last_modified )
      - These can be used in-joint with a reverse proxy cache
  
  - reverse proxy cache

  - load testing
    - load testing is the process of putting demand on a system or device and measuring its response
    